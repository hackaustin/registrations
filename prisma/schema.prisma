// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}


model Ship {
  id BigInt @id @default(autoincrement())
  authors Participant[]
  votes Int @default(0)
  imageUrl String?
  link String?
  title String
}

model Prompt {
  id BigInt @id @default(autoincrement())
  author Participant @relation(fields: [authorEmail], references: [email])
  authorEmail String
  prompt String
  votes Int @default(0)
}

model Waiver {
  id BigInt @id @default(autoincrement())
  
  participant Participant @relation(fields: [participantName, participantEmail, participantDob, parentName, parentEmail, parentPhone, street, city, state, zip ], references: [name, email, dob, parentName, parentEmail, parentPhone, street, city, state, zip ] )
  participantName String
  participantEmail String @unique
  participantPhone String
  participantDob String
  
  participantInitials String
  participantSignature String
  
  parentName String
  parentEmail String
  parentPhone String
  parentSignature String
  
  agreement String
  
}

model Parent {
  name String
  email String @unique
  phone String
  participant Participant
}

model Address {
  participant Participant @relation(fields: [name, email], references: [name, email])
  street String
  city String
  state String
  zip String
}

model Participant {
  id      BigInt   @id @default(autoincrement())
  email   String   @unique
  name    String
  pronouns String?
  dob DateTime
  dietaryRestrictions String?
  technicalSkill technicalSkill
  tShirtSize tShirtSize
  workshop Boolean
  vaccineStatus Boolean
  ships Ship[]
  prompts Prompt[]
  waiver Waiver?
  
  phone String?
  parent Parent? @relation(fields: [parentName, parentEmail, parentPhone], references: [name, email, phone])
  
  parentName String?
  parentPhone String?
  parentEmail String?
  
  address Address?
}

enum technicalSkill {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum tShirtSize {
  AXS
  AS
  AM
  AL
  AXL
}